#!/bin/bash

#
# shows system info and gives some option to update system and reboot
#

# disable ctrl c
trap '' SIGINT

#wait for network to init
sleep 20

# infinitive loop, spacebar refresh info
while true; do
  clear

  echo -e "\e[96m==== SYSTEM ====\e[0m"
  uname -a
  uptime

  echo ""
  echo -e "\e[96m==== DISK FREE ====\e[0m"
  df -h / /home
  echo ""
  echo -e "\e[96m==== MEM FREE ====\e[0m"
  free -h

  echo ""
  echo -e "\e[96m==== PROCESS CPU ====\e[0m"

ps aux --sort=-%cpu | head -n 6 | awk '{printf "%-8s %-6s %-10s %-10s %-40.40s\n", $1, $2, $3, $4, $11}'

  echo ""
  echo -e "\e[96m==== PROCESS MEM ====\e[0m"
ps aux --sort=-%cpu | head -n 3 | awk '{printf "%-8s %-6s %-10s %-10s %-40.40s\n", $1, $2, $3, $4, $11}'

  echo ""
  echo -e "\e[96m==== IP ====\e[0m"
  echo "Hostname: `hostname`"
  ip -4 -o address show

    echo ""
  echo -e "\e[96m==== ROUTE ====\e[0m"
  ip route

  echo ""
  echo -e "\e[96m==== SYSTEMD ====\e[0m"
  systemctl status| head -n 4

  echo ""
  echo ""
  echo -e "\e[96m==== MENU ====\e[0m"
  echo "  Q) Update system and shutdown"
  echo "  W) Update system and reboot"
  echo "  C) Reboot and perform disk checks"
  echo ""

  echo ""
  echo -e "\e[96m==== PING ====\e[0m"

function runPing() {
  ping 1.1.1.1 -W 1 -c 1 | grep from
  ping www.google.com -W 1 -c 1 | grep from
}

# run in  background, not to block input
  runPing &

  read -n 1 choice


  case "$choice" in
    "Q" | "q")
      clear
      setup-upgrade
      echo ""
      echo " !!!!!!!!!!!! SHUTDOWN !!!!!!!!!!!!!!!"
      echo ""
      sleep 10
      poweroff
      ;;
    "W" | "w")
      clear
      setup-upgrade
      echo ""
      echo " !!!!!!!!!!!! REBOOT !!!!!!!!!!!!!!!"
      echo ""
      sleep 10
      reboot
      ;;
    "C" | "c")
      clear
      touch /forcefsck
      reboot
      ;;
    *)
      ;;
  esac
done
